Action                 | Possible error      | Result
1) Compilation         | Syntax              | Code (instructions with references to known data only)
                       |                     | Reference record
                       |                     | Global data (const only?)
                       |                     | 
2) Resolve References  | Undefined reference | Code (instruction with references to all data)
                       | Invalid arg count   | Global data (const and global variables)
                       |                     | 
3) Translate & Execute | Runtime             | Program's output


Data structures for 1): 
Frontend stack: [left] == Typecheck/eval stack => ... <= Reference record stack [right] 
                [base] == Local variables      => ...
Backend stack:  [base] == eval stack           => ...
Reference record: 
  function: 
      name, line, offset 
      referenced location
      return type 
      argument count at call site
  variable: 
      name, line, offset
      referenced location
      type 
      scope (if referenced was done in a scope)


Data structures for 2):
Use 1)'s reference stack, pop check element and resolve their references until the stack is empty
For global references: look in the Global hash table
    local references : look in the Local variable stack 


Data structures for 3):




            


